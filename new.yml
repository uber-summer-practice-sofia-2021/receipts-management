version: '3.7'
services:
  receipts:
    container_name: receipts
    build:
      context: .
    volumes:
      - ./src:/app
      - ./config:/app/config
    ports:
      - target: 5000
        published: 5000
        protocol: tcp
    environment:
      - FLASK_APP=server.py
      - FLASK_ENV=development

  couriers:
    container_name: couriers
    build:
      context: ./services/courier
    volumes:
      - ./services/courier/src:/app
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
    environment:
      - FLASK_APP=courier.py
      - FLASK_ENV=development

  orders:
    container_name: orders
    build:
      context: ./services/orders
    volumes:
      - ./services/orders/src:/app
    ports:
      - target: 9000
        published: 9000
        protocol: tcp
    environment:
      - FLASK_APP=orders.py
      - FLASK_ENV=development

  consumer:
    container_name: consumer
    build:
      context: ./services/kafka
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - zookeeper 

    volumes:
      - ./services/kafka/src:/app

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka 
    image: wurstmeister/kafka:latest
    depends_on:
        - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1"
      # # see https://rmoff.net/2018/08/02/kafka-listeners-explained/
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


networks:
  default:
    name: freya
